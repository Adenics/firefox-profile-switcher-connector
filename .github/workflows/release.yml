name: Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install rpm packager for cargo
        run: cargo install cargo-rpm
      - name: Install deb packager for cargo
        run: cargo install cargo-deb

      - uses: actions/checkout@v2
      - name: Build generic Linux binary
        run: cargo build --verbose --release
      - name: Package Linux .deb
        run: cargo deb
      - name: Package Linux .rpm
        run: cargo rpm build -v

      - name: Run tests
        run: cargo test --verbose
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: linux-artifacts
          retention-days: 5
          path: |
            target/debian
            target/release/rpmbuild/RPMS
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [
          i686-pc-windows-msvc,
          x86_64-pc-windows-msvc,
        ]
    steps:
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          override: true
          default: true
      - name: Install wix packager for cargo
        run: cargo install cargo-wix

      - uses: actions/checkout@v2
      - name: Build Windows binary
        run: cargo build --verbose --release
      - name: Build Windows installer
        run: cargo wix --verbose --nocapture

      - name: Run tests
        run: cargo test --verbose
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: windows-artifacts
          retention-days: 5
          path: |
            target/wix
  release:
    needs: [build-linux, build-windows]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Install utils
        run: |
          sudo apt-get install -y rename
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: Rename artifacts
        run: |
          pushd linux-artifacts
          find . -mindepth 2 -type f -exec mv -t . -n '{}' + # Flatten directory
          rename -E 's/^ff-pswitch-connector_.+?_(.+\.deb)$/linux-$1/' *.deb
          rename -E 's/^ff-pswitch-connector-.+\.(.+\.rpm)$/linux-$1/' *.rpm
          popd
          pushd windows-artifacts
          find . -mindepth 2 -type f -exec mv -t . -n '{}' + # Flatten directory
          rename -E 's/^firefox_profile_switcher_connector-.+?-(.+msi)$/windows-$1/' *.msi
          popd
          rename -E 's/amd64/x86_64/' linux-artifacts/* windows-artifacts/*
          rename -E 's/x86_64/x64/' linux-artifacts/* windows-artifacts/*
      - name: Generate empty package.json for changelog generator
        run: echo "{}" > package.json
      - name: Changelog
        id: Changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            linux-artifacts/*.deb
            linux-artifacts/*.rpm
            windows-artifacts/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
